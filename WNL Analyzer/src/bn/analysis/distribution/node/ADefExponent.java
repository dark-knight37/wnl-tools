/* This file was generated by SableCC (http://www.sablecc.org/). */

package bn.analysis.distribution.node;

import bn.analysis.distribution.analysis.Analysis;

@SuppressWarnings("nls")
public final class ADefExponent extends PExponent
{
    private TNumexp _numexp_;

    public ADefExponent()
    {
        // Constructor
    }

    public ADefExponent(
        @SuppressWarnings("hiding") TNumexp _numexp_)
    {
        // Constructor
        setNumexp(_numexp_);

    }

    @Override
    public Object clone()
    {
        return new ADefExponent(
            cloneNode(this._numexp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADefExponent(this);
    }

    public TNumexp getNumexp()
    {
        return this._numexp_;
    }

    public void setNumexp(TNumexp node)
    {
        if(this._numexp_ != null)
        {
            this._numexp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numexp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._numexp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._numexp_ == child)
        {
            this._numexp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._numexp_ == oldChild)
        {
            setNumexp((TNumexp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
