/* This file was generated by SableCC (http://www.sablecc.org/). */

package wnl.textual.analysis;

import wnl.textual.node.ABothFixedpoint;
import wnl.textual.node.AComplexComponent;
import wnl.textual.node.ADecFixedpoint;
import wnl.textual.node.AEng2Floatingpoint;
import wnl.textual.node.AEngFloatingpoint;
import wnl.textual.node.AIdAname;
import wnl.textual.node.AIdCname;
import wnl.textual.node.AIdContname;
import wnl.textual.node.AIdSname;
import wnl.textual.node.AIntFixedpoint;
import wnl.textual.node.AListAffbody;
import wnl.textual.node.AListAttacks;
import wnl.textual.node.AListComponents;
import wnl.textual.node.AListContbody;
import wnl.textual.node.AListSbody;
import wnl.textual.node.AListServices;
import wnl.textual.node.AListUbody;
import wnl.textual.node.ANoneDetectbody;
import wnl.textual.node.ANoneUses;
import wnl.textual.node.ANumAbsnum;
import wnl.textual.node.APlainFloatingpoint;
import wnl.textual.node.APosnegIntnum;
import wnl.textual.node.ASimpleAffbody;
import wnl.textual.node.ASimpleAttack;
import wnl.textual.node.ASimpleAttacks;
import wnl.textual.node.ASimpleComponent;
import wnl.textual.node.ASimpleComponents;
import wnl.textual.node.ASimpleContbody;
import wnl.textual.node.ASimpleDescr;
import wnl.textual.node.ASimpleDetectbody;
import wnl.textual.node.ASimpleFailure;
import wnl.textual.node.ASimpleModel;
import wnl.textual.node.ASimpleRedundancy;
import wnl.textual.node.ASimpleReplication;
import wnl.textual.node.ASimpleSbody;
import wnl.textual.node.ASimpleService;
import wnl.textual.node.ASimpleServices;
import wnl.textual.node.ASimpleSuccess;
import wnl.textual.node.ASimpleUbody;
import wnl.textual.node.ASimpleUses;
import wnl.textual.node.EOF;
import wnl.textual.node.InvalidToken;
import wnl.textual.node.Node;
import wnl.textual.node.Start;
import wnl.textual.node.Switch;
import wnl.textual.node.TAonKw;
import wnl.textual.node.TAttackKw;
import wnl.textual.node.TBlank;
import wnl.textual.node.TCCurl;
import wnl.textual.node.TComma;
import wnl.textual.node.TCompKw;
import wnl.textual.node.TCtrlZ;
import wnl.textual.node.TDescrKw;
import wnl.textual.node.TDetecKw;
import wnl.textual.node.TDot;
import wnl.textual.node.TEng;
import wnl.textual.node.TFailureKw;
import wnl.textual.node.TIdentifier;
import wnl.textual.node.TImplKw;
import wnl.textual.node.TMinus;
import wnl.textual.node.TNodetecKw;
import wnl.textual.node.TNouseKw;
import wnl.textual.node.TNumber;
import wnl.textual.node.TOCurl;
import wnl.textual.node.TRedundancyKw;
import wnl.textual.node.TReplicationKw;
import wnl.textual.node.TSemi;
import wnl.textual.node.TServKw;
import wnl.textual.node.TSpace;
import wnl.textual.node.TSpaces;
import wnl.textual.node.TSuccessKw;
import wnl.textual.node.TText;
import wnl.textual.node.TUnoeng;
import wnl.textual.node.TUseKw;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseASimpleModel(ASimpleModel node);
    void caseASimpleServices(ASimpleServices node);
    void caseAListServices(AListServices node);
    void caseASimpleService(ASimpleService node);
    void caseASimpleDetectbody(ASimpleDetectbody node);
    void caseANoneDetectbody(ANoneDetectbody node);
    void caseASimpleContbody(ASimpleContbody node);
    void caseAListContbody(AListContbody node);
    void caseASimpleSbody(ASimpleSbody node);
    void caseAListSbody(AListSbody node);
    void caseASimpleComponents(ASimpleComponents node);
    void caseAListComponents(AListComponents node);
    void caseASimpleComponent(ASimpleComponent node);
    void caseAComplexComponent(AComplexComponent node);
    void caseANoneUses(ANoneUses node);
    void caseASimpleUses(ASimpleUses node);
    void caseASimpleUbody(ASimpleUbody node);
    void caseAListUbody(AListUbody node);
    void caseASimpleAttacks(ASimpleAttacks node);
    void caseAListAttacks(AListAttacks node);
    void caseASimpleAttack(ASimpleAttack node);
    void caseASimpleAffbody(ASimpleAffbody node);
    void caseAListAffbody(AListAffbody node);
    void caseASimpleDescr(ASimpleDescr node);
    void caseASimpleFailure(ASimpleFailure node);
    void caseASimpleReplication(ASimpleReplication node);
    void caseASimpleRedundancy(ASimpleRedundancy node);
    void caseASimpleSuccess(ASimpleSuccess node);
    void caseAPlainFloatingpoint(APlainFloatingpoint node);
    void caseAEngFloatingpoint(AEngFloatingpoint node);
    void caseAEng2Floatingpoint(AEng2Floatingpoint node);
    void caseAIntFixedpoint(AIntFixedpoint node);
    void caseADecFixedpoint(ADecFixedpoint node);
    void caseABothFixedpoint(ABothFixedpoint node);
    void caseAPosnegIntnum(APosnegIntnum node);
    void caseANumAbsnum(ANumAbsnum node);
    void caseAIdAname(AIdAname node);
    void caseAIdSname(AIdSname node);
    void caseAIdContname(AIdContname node);
    void caseAIdCname(AIdCname node);

    void caseTNodetecKw(TNodetecKw node);
    void caseTDetecKw(TDetecKw node);
    void caseTImplKw(TImplKw node);
    void caseTAonKw(TAonKw node);
    void caseTNouseKw(TNouseKw node);
    void caseTUseKw(TUseKw node);
    void caseTAttackKw(TAttackKw node);
    void caseTServKw(TServKw node);
    void caseTCompKw(TCompKw node);
    void caseTDescrKw(TDescrKw node);
    void caseTFailureKw(TFailureKw node);
    void caseTRedundancyKw(TRedundancyKw node);
    void caseTReplicationKw(TReplicationKw node);
    void caseTSuccessKw(TSuccessKw node);
    void caseTOCurl(TOCurl node);
    void caseTCCurl(TCCurl node);
    void caseTEng(TEng node);
    void caseTUnoeng(TUnoeng node);
    void caseTDot(TDot node);
    void caseTSemi(TSemi node);
    void caseTComma(TComma node);
    void caseTMinus(TMinus node);
    void caseTSpaces(TSpaces node);
    void caseTSpace(TSpace node);
    void caseTIdentifier(TIdentifier node);
    void caseTText(TText node);
    void caseTNumber(TNumber node);
    void caseTBlank(TBlank node);
    void caseTCtrlZ(TCtrlZ node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
