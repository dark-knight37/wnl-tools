/* This file was generated by SableCC (http://www.sablecc.org/). */

package wnl.textual.node;

import wnl.textual.analysis.Analysis;

@SuppressWarnings("nls")
public final class AListAffbody extends PAffbody
{
    private PCname _cname_;
    private TComma _comma_;
    private PAffbody _affbody_;

    public AListAffbody()
    {
        // Constructor
    }

    public AListAffbody(
        @SuppressWarnings("hiding") PCname _cname_,
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") PAffbody _affbody_)
    {
        // Constructor
        setCname(_cname_);

        setComma(_comma_);

        setAffbody(_affbody_);

    }

    @Override
    public Object clone()
    {
        return new AListAffbody(
            cloneNode(this._cname_),
            cloneNode(this._comma_),
            cloneNode(this._affbody_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListAffbody(this);
    }

    public PCname getCname()
    {
        return this._cname_;
    }

    public void setCname(PCname node)
    {
        if(this._cname_ != null)
        {
            this._cname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cname_ = node;
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public PAffbody getAffbody()
    {
        return this._affbody_;
    }

    public void setAffbody(PAffbody node)
    {
        if(this._affbody_ != null)
        {
            this._affbody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._affbody_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._cname_)
            + toString(this._comma_)
            + toString(this._affbody_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._cname_ == child)
        {
            this._cname_ = null;
            return;
        }

        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._affbody_ == child)
        {
            this._affbody_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._cname_ == oldChild)
        {
            setCname((PCname) newChild);
            return;
        }

        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._affbody_ == oldChild)
        {
            setAffbody((PAffbody) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
