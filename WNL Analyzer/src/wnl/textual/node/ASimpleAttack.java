/* This file was generated by SableCC (http://www.sablecc.org/). */

package wnl.textual.node;

import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;

import wnl.textual.analysis.Analysis;

@SuppressWarnings("nls")
public final class ASimpleAttack extends PAttack
{
    private TAttackKw _attackKw_;
    private PAname _aname_;
    private TOCurl _oCurl_;
    private final LinkedList<PDescr> _descr_ = new LinkedList<PDescr>();
    private PSuccess _success_;
    private TAonKw _aonKw_;
    private PAffbody _affbody_;
    private TSemi _semi_;
    private TCCurl _cCurl_;

    public ASimpleAttack()
    {
        // Constructor
    }

    public ASimpleAttack(
        @SuppressWarnings("hiding") TAttackKw _attackKw_,
        @SuppressWarnings("hiding") PAname _aname_,
        @SuppressWarnings("hiding") TOCurl _oCurl_,
        @SuppressWarnings("hiding") List<?> _descr_,
        @SuppressWarnings("hiding") PSuccess _success_,
        @SuppressWarnings("hiding") TAonKw _aonKw_,
        @SuppressWarnings("hiding") PAffbody _affbody_,
        @SuppressWarnings("hiding") TSemi _semi_,
        @SuppressWarnings("hiding") TCCurl _cCurl_)
    {
        // Constructor
        setAttackKw(_attackKw_);

        setAname(_aname_);

        setOCurl(_oCurl_);

        setDescr(_descr_);

        setSuccess(_success_);

        setAonKw(_aonKw_);

        setAffbody(_affbody_);

        setSemi(_semi_);

        setCCurl(_cCurl_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleAttack(
            cloneNode(this._attackKw_),
            cloneNode(this._aname_),
            cloneNode(this._oCurl_),
            cloneList(this._descr_),
            cloneNode(this._success_),
            cloneNode(this._aonKw_),
            cloneNode(this._affbody_),
            cloneNode(this._semi_),
            cloneNode(this._cCurl_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleAttack(this);
    }

    public TAttackKw getAttackKw()
    {
        return this._attackKw_;
    }

    public void setAttackKw(TAttackKw node)
    {
        if(this._attackKw_ != null)
        {
            this._attackKw_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attackKw_ = node;
    }

    public PAname getAname()
    {
        return this._aname_;
    }

    public void setAname(PAname node)
    {
        if(this._aname_ != null)
        {
            this._aname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aname_ = node;
    }

    public TOCurl getOCurl()
    {
        return this._oCurl_;
    }

    public void setOCurl(TOCurl node)
    {
        if(this._oCurl_ != null)
        {
            this._oCurl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._oCurl_ = node;
    }

    public LinkedList<PDescr> getDescr()
    {
        return this._descr_;
    }

    public void setDescr(List<?> list)
    {
        for(PDescr e : this._descr_)
        {
            e.parent(null);
        }
        this._descr_.clear();

        for(Object obj_e : list)
        {
            PDescr e = (PDescr) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._descr_.add(e);
        }
    }

    public PSuccess getSuccess()
    {
        return this._success_;
    }

    public void setSuccess(PSuccess node)
    {
        if(this._success_ != null)
        {
            this._success_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._success_ = node;
    }

    public TAonKw getAonKw()
    {
        return this._aonKw_;
    }

    public void setAonKw(TAonKw node)
    {
        if(this._aonKw_ != null)
        {
            this._aonKw_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aonKw_ = node;
    }

    public PAffbody getAffbody()
    {
        return this._affbody_;
    }

    public void setAffbody(PAffbody node)
    {
        if(this._affbody_ != null)
        {
            this._affbody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._affbody_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    public TCCurl getCCurl()
    {
        return this._cCurl_;
    }

    public void setCCurl(TCCurl node)
    {
        if(this._cCurl_ != null)
        {
            this._cCurl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cCurl_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._attackKw_)
            + toString(this._aname_)
            + toString(this._oCurl_)
            + toString(this._descr_)
            + toString(this._success_)
            + toString(this._aonKw_)
            + toString(this._affbody_)
            + toString(this._semi_)
            + toString(this._cCurl_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._attackKw_ == child)
        {
            this._attackKw_ = null;
            return;
        }

        if(this._aname_ == child)
        {
            this._aname_ = null;
            return;
        }

        if(this._oCurl_ == child)
        {
            this._oCurl_ = null;
            return;
        }

        if(this._descr_.remove(child))
        {
            return;
        }

        if(this._success_ == child)
        {
            this._success_ = null;
            return;
        }

        if(this._aonKw_ == child)
        {
            this._aonKw_ = null;
            return;
        }

        if(this._affbody_ == child)
        {
            this._affbody_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        if(this._cCurl_ == child)
        {
            this._cCurl_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._attackKw_ == oldChild)
        {
            setAttackKw((TAttackKw) newChild);
            return;
        }

        if(this._aname_ == oldChild)
        {
            setAname((PAname) newChild);
            return;
        }

        if(this._oCurl_ == oldChild)
        {
            setOCurl((TOCurl) newChild);
            return;
        }

        for(ListIterator<PDescr> i = this._descr_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDescr) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._success_ == oldChild)
        {
            setSuccess((PSuccess) newChild);
            return;
        }

        if(this._aonKw_ == oldChild)
        {
            setAonKw((TAonKw) newChild);
            return;
        }

        if(this._affbody_ == oldChild)
        {
            setAffbody((PAffbody) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        if(this._cCurl_ == oldChild)
        {
            setCCurl((TCCurl) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
