/* This file was generated by SableCC (http://www.sablecc.org/). */

package wnl.textual.node;

import wnl.textual.analysis.Analysis;

@SuppressWarnings("nls")
public final class ASimpleDetectbody extends PDetectbody
{
    private TDetecKw _detecKw_;
    private PContbody _contbody_;

    public ASimpleDetectbody()
    {
        // Constructor
    }

    public ASimpleDetectbody(
        @SuppressWarnings("hiding") TDetecKw _detecKw_,
        @SuppressWarnings("hiding") PContbody _contbody_)
    {
        // Constructor
        setDetecKw(_detecKw_);

        setContbody(_contbody_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleDetectbody(
            cloneNode(this._detecKw_),
            cloneNode(this._contbody_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleDetectbody(this);
    }

    public TDetecKw getDetecKw()
    {
        return this._detecKw_;
    }

    public void setDetecKw(TDetecKw node)
    {
        if(this._detecKw_ != null)
        {
            this._detecKw_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._detecKw_ = node;
    }

    public PContbody getContbody()
    {
        return this._contbody_;
    }

    public void setContbody(PContbody node)
    {
        if(this._contbody_ != null)
        {
            this._contbody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._contbody_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._detecKw_)
            + toString(this._contbody_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._detecKw_ == child)
        {
            this._detecKw_ = null;
            return;
        }

        if(this._contbody_ == child)
        {
            this._contbody_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._detecKw_ == oldChild)
        {
            setDetecKw((TDetecKw) newChild);
            return;
        }

        if(this._contbody_ == oldChild)
        {
            setContbody((PContbody) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
