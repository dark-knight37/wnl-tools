@namespace(uri="WNL", prefix="WNL")
package WNLML;

@gmf.diagram
class WaterNetwork {
  val WNNode[*] containsNode;
  val Pipe[*] containsLink;
  val Contaminant[*] containsAttack;
}


class WNNode {
  attr String name;
  attr String description;
  attr String monitoringService;
}

@gmf.link(label="id", source="source", target="destination", target.decoration="arrow", color="128,128,128", width="2")
class Pipe {
  attr PipeStatus status;
  attr EFloat flowrate;
  ref WNNode[1] source;
  ref WNNode[1] destination;
  attr String ~id;
}

@gmf.node(label="name", label.icon="false", label.placement="external", figure="figures.HazardFigure", border.color="0,0,0", size="80,80")
class Contaminant {
  attr float concentration;

  @gmf.link(label="ID", target="destination", target.decoration="arrow", style="dot", color="255,0,0", width="2")
  ref WNNode[+] attacks;
  attr String name;
  attr String description;
}

enum ContaminantType {
  DisinfectionByProduct = 0;
  Microorganism = 0;
  OrganicChemical = 0;
  InorganicChemical = 0;
  RadioNuclides = 0;
}

enum PipeStatus {
  Open = 0;
  Close = 0;
}

@gmf.node(label="name", label.icon="false", label.placement="external", figure="figures.WaterPumpFigure")
class WaterPump extends WNNode {
}

@gmf.node(label="name", label.icon="false", label.placement="external", figure="figures.ValveFigure")
class Valve extends WNNode {
}

@gmf.node(label="name", label.icon="false", label.placement="external", figure="figures.ReservoirFigure")
class Reservoir extends WNNode {
}

@gmf.node(label="name", label.icon="false", label.placement="external", figure="figures.TankFigure")
class Tank extends WNNode {
}

@gmf.node(label="name", label.icon="false", label.placement="external", figure="ellipse", color="0,0,0", border.color="0,0,0", size="30,30")
class Conjuction extends WNNode {
}

