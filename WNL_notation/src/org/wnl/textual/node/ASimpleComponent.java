/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.wnl.textual.node;

import org.wnl.textual.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleComponent extends PComponent
{
    private TCompKw _compKw_;
    private PCname _cname_;
    private TOCurl _oCurl_;
    private PCbody _cbody_;
    private TCCurl _cCurl_;

    public ASimpleComponent()
    {
        // Constructor
    }

    public ASimpleComponent(
        @SuppressWarnings("hiding") TCompKw _compKw_,
        @SuppressWarnings("hiding") PCname _cname_,
        @SuppressWarnings("hiding") TOCurl _oCurl_,
        @SuppressWarnings("hiding") PCbody _cbody_,
        @SuppressWarnings("hiding") TCCurl _cCurl_)
    {
        // Constructor
        setCompKw(_compKw_);

        setCname(_cname_);

        setOCurl(_oCurl_);

        setCbody(_cbody_);

        setCCurl(_cCurl_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleComponent(
            cloneNode(this._compKw_),
            cloneNode(this._cname_),
            cloneNode(this._oCurl_),
            cloneNode(this._cbody_),
            cloneNode(this._cCurl_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleComponent(this);
    }

    public TCompKw getCompKw()
    {
        return this._compKw_;
    }

    public void setCompKw(TCompKw node)
    {
        if(this._compKw_ != null)
        {
            this._compKw_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._compKw_ = node;
    }

    public PCname getCname()
    {
        return this._cname_;
    }

    public void setCname(PCname node)
    {
        if(this._cname_ != null)
        {
            this._cname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cname_ = node;
    }

    public TOCurl getOCurl()
    {
        return this._oCurl_;
    }

    public void setOCurl(TOCurl node)
    {
        if(this._oCurl_ != null)
        {
            this._oCurl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._oCurl_ = node;
    }

    public PCbody getCbody()
    {
        return this._cbody_;
    }

    public void setCbody(PCbody node)
    {
        if(this._cbody_ != null)
        {
            this._cbody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cbody_ = node;
    }

    public TCCurl getCCurl()
    {
        return this._cCurl_;
    }

    public void setCCurl(TCCurl node)
    {
        if(this._cCurl_ != null)
        {
            this._cCurl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cCurl_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._compKw_)
            + toString(this._cname_)
            + toString(this._oCurl_)
            + toString(this._cbody_)
            + toString(this._cCurl_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._compKw_ == child)
        {
            this._compKw_ = null;
            return;
        }

        if(this._cname_ == child)
        {
            this._cname_ = null;
            return;
        }

        if(this._oCurl_ == child)
        {
            this._oCurl_ = null;
            return;
        }

        if(this._cbody_ == child)
        {
            this._cbody_ = null;
            return;
        }

        if(this._cCurl_ == child)
        {
            this._cCurl_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._compKw_ == oldChild)
        {
            setCompKw((TCompKw) newChild);
            return;
        }

        if(this._cname_ == oldChild)
        {
            setCname((PCname) newChild);
            return;
        }

        if(this._oCurl_ == oldChild)
        {
            setOCurl((TOCurl) newChild);
            return;
        }

        if(this._cbody_ == oldChild)
        {
            setCbody((PCbody) newChild);
            return;
        }

        if(this._cCurl_ == oldChild)
        {
            setCCurl((TCCurl) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
