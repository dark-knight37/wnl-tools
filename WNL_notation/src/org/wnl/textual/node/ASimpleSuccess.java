/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.wnl.textual.node;

import org.wnl.textual.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleSuccess extends PSuccess
{
    private TSuccessKw _successKw_;
    private PFixedpoint _fixedpoint_;
    private TSemi _semi_;

    public ASimpleSuccess()
    {
        // Constructor
    }

    public ASimpleSuccess(
        @SuppressWarnings("hiding") TSuccessKw _successKw_,
        @SuppressWarnings("hiding") PFixedpoint _fixedpoint_,
        @SuppressWarnings("hiding") TSemi _semi_)
    {
        // Constructor
        setSuccessKw(_successKw_);

        setFixedpoint(_fixedpoint_);

        setSemi(_semi_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleSuccess(
            cloneNode(this._successKw_),
            cloneNode(this._fixedpoint_),
            cloneNode(this._semi_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleSuccess(this);
    }

    public TSuccessKw getSuccessKw()
    {
        return this._successKw_;
    }

    public void setSuccessKw(TSuccessKw node)
    {
        if(this._successKw_ != null)
        {
            this._successKw_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._successKw_ = node;
    }

    public PFixedpoint getFixedpoint()
    {
        return this._fixedpoint_;
    }

    public void setFixedpoint(PFixedpoint node)
    {
        if(this._fixedpoint_ != null)
        {
            this._fixedpoint_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fixedpoint_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._successKw_)
            + toString(this._fixedpoint_)
            + toString(this._semi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._successKw_ == child)
        {
            this._successKw_ = null;
            return;
        }

        if(this._fixedpoint_ == child)
        {
            this._fixedpoint_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._successKw_ == oldChild)
        {
            setSuccessKw((TSuccessKw) newChild);
            return;
        }

        if(this._fixedpoint_ == oldChild)
        {
            setFixedpoint((PFixedpoint) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
