/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.wnl.textual.node;

import org.wnl.textual.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleFailure extends PFailure
{
    private TFailureKw _failureKw_;
    private PFloatingpoint _floatingpoint_;
    private TSemi _semi_;

    public ASimpleFailure()
    {
        // Constructor
    }

    public ASimpleFailure(
        @SuppressWarnings("hiding") TFailureKw _failureKw_,
        @SuppressWarnings("hiding") PFloatingpoint _floatingpoint_,
        @SuppressWarnings("hiding") TSemi _semi_)
    {
        // Constructor
        setFailureKw(_failureKw_);

        setFloatingpoint(_floatingpoint_);

        setSemi(_semi_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleFailure(
            cloneNode(this._failureKw_),
            cloneNode(this._floatingpoint_),
            cloneNode(this._semi_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleFailure(this);
    }

    public TFailureKw getFailureKw()
    {
        return this._failureKw_;
    }

    public void setFailureKw(TFailureKw node)
    {
        if(this._failureKw_ != null)
        {
            this._failureKw_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._failureKw_ = node;
    }

    public PFloatingpoint getFloatingpoint()
    {
        return this._floatingpoint_;
    }

    public void setFloatingpoint(PFloatingpoint node)
    {
        if(this._floatingpoint_ != null)
        {
            this._floatingpoint_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._floatingpoint_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._failureKw_)
            + toString(this._floatingpoint_)
            + toString(this._semi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._failureKw_ == child)
        {
            this._failureKw_ = null;
            return;
        }

        if(this._floatingpoint_ == child)
        {
            this._floatingpoint_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._failureKw_ == oldChild)
        {
            setFailureKw((TFailureKw) newChild);
            return;
        }

        if(this._floatingpoint_ == oldChild)
        {
            setFloatingpoint((PFloatingpoint) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
