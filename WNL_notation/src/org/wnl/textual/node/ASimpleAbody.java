/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.wnl.textual.node;

import java.util.*;
import org.wnl.textual.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleAbody extends PAbody
{
    private final LinkedList<PDescr> _descr_ = new LinkedList<PDescr>();
    private PSuccess _success_;
    private TAonKw _aonKw_;
    private PAffbody _affbody_;
    private TSemi _semi_;

    public ASimpleAbody()
    {
        // Constructor
    }

    public ASimpleAbody(
        @SuppressWarnings("hiding") List<?> _descr_,
        @SuppressWarnings("hiding") PSuccess _success_,
        @SuppressWarnings("hiding") TAonKw _aonKw_,
        @SuppressWarnings("hiding") PAffbody _affbody_,
        @SuppressWarnings("hiding") TSemi _semi_)
    {
        // Constructor
        setDescr(_descr_);

        setSuccess(_success_);

        setAonKw(_aonKw_);

        setAffbody(_affbody_);

        setSemi(_semi_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleAbody(
            cloneList(this._descr_),
            cloneNode(this._success_),
            cloneNode(this._aonKw_),
            cloneNode(this._affbody_),
            cloneNode(this._semi_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleAbody(this);
    }

    public LinkedList<PDescr> getDescr()
    {
        return this._descr_;
    }

    public void setDescr(List<?> list)
    {
        for(PDescr e : this._descr_)
        {
            e.parent(null);
        }
        this._descr_.clear();

        for(Object obj_e : list)
        {
            PDescr e = (PDescr) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._descr_.add(e);
        }
    }

    public PSuccess getSuccess()
    {
        return this._success_;
    }

    public void setSuccess(PSuccess node)
    {
        if(this._success_ != null)
        {
            this._success_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._success_ = node;
    }

    public TAonKw getAonKw()
    {
        return this._aonKw_;
    }

    public void setAonKw(TAonKw node)
    {
        if(this._aonKw_ != null)
        {
            this._aonKw_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aonKw_ = node;
    }

    public PAffbody getAffbody()
    {
        return this._affbody_;
    }

    public void setAffbody(PAffbody node)
    {
        if(this._affbody_ != null)
        {
            this._affbody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._affbody_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._descr_)
            + toString(this._success_)
            + toString(this._aonKw_)
            + toString(this._affbody_)
            + toString(this._semi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._descr_.remove(child))
        {
            return;
        }

        if(this._success_ == child)
        {
            this._success_ = null;
            return;
        }

        if(this._aonKw_ == child)
        {
            this._aonKw_ = null;
            return;
        }

        if(this._affbody_ == child)
        {
            this._affbody_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PDescr> i = this._descr_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDescr) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._success_ == oldChild)
        {
            setSuccess((PSuccess) newChild);
            return;
        }

        if(this._aonKw_ == oldChild)
        {
            setAonKw((TAonKw) newChild);
            return;
        }

        if(this._affbody_ == oldChild)
        {
            setAffbody((PAffbody) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
