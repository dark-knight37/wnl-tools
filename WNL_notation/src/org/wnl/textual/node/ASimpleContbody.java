/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.wnl.textual.node;

import org.wnl.textual.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleContbody extends PContbody
{
    private PContname _contname_;

    public ASimpleContbody()
    {
        // Constructor
    }

    public ASimpleContbody(
        @SuppressWarnings("hiding") PContname _contname_)
    {
        // Constructor
        setContname(_contname_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleContbody(
            cloneNode(this._contname_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleContbody(this);
    }

    public PContname getContname()
    {
        return this._contname_;
    }

    public void setContname(PContname node)
    {
        if(this._contname_ != null)
        {
            this._contname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._contname_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._contname_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._contname_ == child)
        {
            this._contname_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._contname_ == oldChild)
        {
            setContname((PContname) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
