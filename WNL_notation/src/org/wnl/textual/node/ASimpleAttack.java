/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.wnl.textual.node;

import org.wnl.textual.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleAttack extends PAttack
{
    private TAttackKw _attackKw_;
    private PAname _aname_;
    private TOCurl _oCurl_;
    private PAbody _abody_;
    private TCCurl _cCurl_;

    public ASimpleAttack()
    {
        // Constructor
    }

    public ASimpleAttack(
        @SuppressWarnings("hiding") TAttackKw _attackKw_,
        @SuppressWarnings("hiding") PAname _aname_,
        @SuppressWarnings("hiding") TOCurl _oCurl_,
        @SuppressWarnings("hiding") PAbody _abody_,
        @SuppressWarnings("hiding") TCCurl _cCurl_)
    {
        // Constructor
        setAttackKw(_attackKw_);

        setAname(_aname_);

        setOCurl(_oCurl_);

        setAbody(_abody_);

        setCCurl(_cCurl_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleAttack(
            cloneNode(this._attackKw_),
            cloneNode(this._aname_),
            cloneNode(this._oCurl_),
            cloneNode(this._abody_),
            cloneNode(this._cCurl_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleAttack(this);
    }

    public TAttackKw getAttackKw()
    {
        return this._attackKw_;
    }

    public void setAttackKw(TAttackKw node)
    {
        if(this._attackKw_ != null)
        {
            this._attackKw_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attackKw_ = node;
    }

    public PAname getAname()
    {
        return this._aname_;
    }

    public void setAname(PAname node)
    {
        if(this._aname_ != null)
        {
            this._aname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aname_ = node;
    }

    public TOCurl getOCurl()
    {
        return this._oCurl_;
    }

    public void setOCurl(TOCurl node)
    {
        if(this._oCurl_ != null)
        {
            this._oCurl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._oCurl_ = node;
    }

    public PAbody getAbody()
    {
        return this._abody_;
    }

    public void setAbody(PAbody node)
    {
        if(this._abody_ != null)
        {
            this._abody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abody_ = node;
    }

    public TCCurl getCCurl()
    {
        return this._cCurl_;
    }

    public void setCCurl(TCCurl node)
    {
        if(this._cCurl_ != null)
        {
            this._cCurl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cCurl_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._attackKw_)
            + toString(this._aname_)
            + toString(this._oCurl_)
            + toString(this._abody_)
            + toString(this._cCurl_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._attackKw_ == child)
        {
            this._attackKw_ = null;
            return;
        }

        if(this._aname_ == child)
        {
            this._aname_ = null;
            return;
        }

        if(this._oCurl_ == child)
        {
            this._oCurl_ = null;
            return;
        }

        if(this._abody_ == child)
        {
            this._abody_ = null;
            return;
        }

        if(this._cCurl_ == child)
        {
            this._cCurl_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._attackKw_ == oldChild)
        {
            setAttackKw((TAttackKw) newChild);
            return;
        }

        if(this._aname_ == oldChild)
        {
            setAname((PAname) newChild);
            return;
        }

        if(this._oCurl_ == oldChild)
        {
            setOCurl((TOCurl) newChild);
            return;
        }

        if(this._abody_ == oldChild)
        {
            setAbody((PAbody) newChild);
            return;
        }

        if(this._cCurl_ == oldChild)
        {
            setCCurl((TCCurl) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
